"use strict";var Article={data:{page_number:2,len:null,Total_pages:null,currentPage:1},init:function(){this.bind()},bind:function(){window.addEventListener("load",this.articleShow),window.addEventListener("load",this.paginationShow);var t=document.getElementById("article-list"),t=(this.onEventlister(t,"click","item-title",this.handleArticleShow),document.getElementById("pagination"));this.onEventlister(t,"click","pagination-btn",this.handlePreOrNextPage),this.onEventlister(t,"click","pagination-item",this.handleToPage)},onEventlister:function(t,e,a,n){t.addEventListener(e,function(t){0<=t.target.className.indexOf(a)&&n(t)})},articleShow:function(){var t=Article.data.page_number,e=document.getElementById("article-list").dataset.length;Article.data.len=e;for(var a=1;a<=e;a++){var n=document.getElementById("row".concat(a));t<a&&(n.style.display="none")}},paginationShow:function(){var t=Article.data.len,e=Article.data.page_number,a=t%e==0?t/e:t/e+1,n=(Article.data.Total_pages=Math.floor(a),document.getElementById("pagination"));if(2<=a){n.innerHTML='\n        <button class="pagination-btn" id="pre">&laquo;</button>\n      ';for(var i=1;i<=a;i++)n.innerHTML+='\n          <li class="pagination-item" id="'.concat(i,'">').concat(i,"</li>\n        ");n.innerHTML+='\n        <button class="pagination-btn" id="next">&raquo;</button>\n      ',document.getElementById("pre").setAttribute("disabled","disabled"),document.getElementsByClassName("pagination-item")[0].style.color="rgb(5, 246, 5)"}},handleArticleShow:function(t){var e=t.target.dataset.id,a=t.target.dataset.visits,t=t.target.dataset.classify_id;location.assign("/article/show/".concat(e,"?visits=").concat(a,"&classify_id=").concat(t))},handlePreOrNextPage:function(t){var e=Number(Article.data.currentPage),a=Article.data.Total_pages;"pre"==t.target.id&&(e-1==1&&t.target.setAttribute("disabled","disabled"),document.getElementById("next").removeAttribute("disabled"),Article.changeColor(e-1),Article.goPage(e-1),Article.data.currentPage=e-1),"next"==t.target.id&&(e+1==a&&t.target.setAttribute("disabled","disabled"),document.getElementById("pre").removeAttribute("disabled"),Article.changeColor(e+1),Article.goPage(e+1),Article.data.currentPage=e+1)},changeColor:function(t){for(var e=document.getElementsByClassName("pagination-item"),a=0;a<e.length;a++)e[a].style.color="black";e[t-1].style.color="rgb(5, 246, 5)"},goPage:function(t){var e,a,n=Article.data.page_number,i=Article.data.len;1!=t?i-1<(a=(e=(t-1)*n)+n)&&(a=i):(e=0,a=n);for(var r=1;r<=i;r++){var l=document.getElementById("row".concat(r));l.style.display=r<=e||a<r?"none":"block"}},handleToPage:function(t){var t=t.target.id,e=Article.data.Total_pages,a=document.getElementById("pre"),n=document.getElementById("next");switch(t){case"1":a.setAttribute("disabled","disabled"),n.removeAttribute("disabled");break;case"".concat(e):n.setAttribute("disabled","disabled"),a.removeAttribute("disabled");break;default:a.removeAttribute("disabled"),n.removeAttribute("disabled")}Article.data.currentPage=t,Article.changeColor(t),Article.goPage(t)}};Article.init();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,